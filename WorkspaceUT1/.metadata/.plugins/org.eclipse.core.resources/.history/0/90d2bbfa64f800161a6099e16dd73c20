package chat;

import java.awt.BorderLayout;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JTextField;
import javax.swing.JScrollPane;
import javax.swing.JTextPane;
import java.awt.event.ActionListener;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.awt.event.ActionEvent;
import javax.swing.JTextArea;
import javax.swing.JSeparator;

public class ClienteUI extends JFrame {

	private JPanel contentPane;
	Socket socket;
	private JTextArea textArea;
	private DataOutputStream dos;
	private JTextField textField;
	private String usuario;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					ClienteUI frame = new ClienteUI();
					frame.setVisible(true);
					frame.escuchar();
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public ClienteUI() {
		usuario = null;
		try{
			socket = new Socket("localhost",1555);
			dos = new DataOutputStream(socket.getOutputStream());
			usuario = String.valueOf((int)(Math.random()*999));
		}catch(Exception e){
			JOptionPane.showMessageDialog(this, e.getMessage(), "Excepción fatal:",
			        JOptionPane.ERROR_MESSAGE);
			e.printStackTrace();
		}
		 
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 504, 485);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JButton btnEnviar = new JButton("Enviar");
		btnEnviar.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				try{
					dos.writeUTF(usuario + ": " + textField.getText() );
				}
				catch(Exception exc){
					JOptionPane.showMessageDialog(new JFrame(), exc.getMessage(), "Excepción fatal:",
					        JOptionPane.ERROR_MESSAGE);
					exc.printStackTrace();
				}
			}
		});
		btnEnviar.setBounds(389, 386, 89, 49);
		contentPane.add(btnEnviar);
		
		textField = new JTextField();
		textField.setBounds(10, 386, 369, 47);
		contentPane.add(textField);
		textField.setColumns(10);
		
		textArea = new JTextArea();
		textArea.setBounds(10, 11, 468, 351);
		contentPane.add(textArea);
		
		JSeparator separator = new JSeparator();
		separator.setBounds(10, 373, 468, 13);
		contentPane.add(separator);
	}
	
	public void escuchar(){
       
        try {
        	 DataInputStream dis = null;
             String mensaje;
            dis = new DataInputStream(socket.getInputStream());
            while (true) {
            	mensaje = dis.readUTF();
				textArea.append(mensaje + System.lineSeparator());
            }
            
        } catch (Exception ex) {
        	JOptionPane.showConfirmDialog( this, "Error en stream de entrada: " + ex.getMessage(),
            		"ERROR", JOptionPane.ERROR_MESSAGE );
            ex.printStackTrace();
        }

    }
}
